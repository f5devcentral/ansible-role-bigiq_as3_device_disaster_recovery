---
- name: Re authenticate to BIG-IQ
  include_tasks: authentication.yaml

- name: Check if configSetName exist
  uri:
    url: https://{{ provider.server }}:{{ provider.server_port }}/mgmt/cm/global/config-sets?$filter=configSetName%20eq%20'{{ item1.configSetName }}'
    method: GET
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    status_code: 200, 202
  register: json_response

- name: Check if configSetName exist
  set_fact:
    configSetName_exist: "{{ json_response | json_query(query) }}"
  vars: 
    query: "json.items[0].configSetName"

- name: Force-Delete App services - {{ item1.configSetName }}
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/cm/global/tasks/force-delete"
    method: POST
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      Content-Type: application/json
      X-F5-Auth-Token: "{{ f5_auth_token }}"
    body: |
      {
          "configSetName": "{{ item1.configSetName }}"
      }
    body_format: json
    status_code: 202
  register: json_response
  when: configSetName_exist | length > 0

- name: Check Force-Delete status Rescue
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/cm/global/tasks/force-delete/{{ json_response.json.id }}"
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      Content-Type: application/json
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: status
  until: status.json.status in ['FINISHED', 'FAILED']
  retries: 40
  delay: 10
  ignore_errors: yes # we ignore if failed the 2nd time, log it and continue with the next one
  when: 
    - configSetName_exist | length > 0

- debug:
    var: status.json
  when: status.json.status == 'FAILED'

- name: Save in a file the name of the configSet
  lineinfile:
    path: "{{ dir_as3 }}/{{ provider.server }}_bigiq_force-delete_2nd_attempt_failed.txt"
    line: "{{ item1.configSetName }}"
    create: yes
  delegate_to: localhost
  when: status.json.status == 'FAILED'

- name: Save in a file the name of the configSet
  lineinfile:
    path: "{{ dir_as3 }}/{{ provider.server }}_bigiq_force-delete_2nd_attempt_succeed.txt"
    line: "{{ item1.configSetName }}"
    create: yes
  delegate_to: localhost
  when: status.json.status == 'FINISHED'
