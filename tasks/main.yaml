---
- name: Setup provider and variable
  set_fact:
    provider: "{{ provider }}"

### Ask for BIG-IQ Credentials if not specified in the playbook

- pause:
    prompt: |
            ========================================================================================================
            Provide the BIG-IQ username

            ========================================================================================================
  register: bigiq_username
  when: 
    - provider.user is undefined

- name: Set BIG-IQ username
  ansible.utils.update_fact:
    updates:
    - path: provider['user']
      value: "{{ bigiq_username.user_input }}"
  register: updated_provider
  when: 
    - provider.user is undefined

- name: Update provider and variable
  set_fact:
    provider: "{{ updated_provider.provider }}"
  when: 
    - provider.user is undefined

- pause:
    prompt: |
            ========================================================================================================
            Provide the BIG-IQ password

            ========================================================================================================
    echo: no
  no_log: True
  register: bigiq_password
  when: 
    - provider.password is undefined

- name: Set BIG-IQ password
  ansible.utils.update_fact:
    updates:
    - path: provider['password']
      value: "{{ bigiq_password.user_input }}"
  no_log: True
  register: updated_provider
  when: 
    - provider.password is undefined

- name: Update provider and variable
  set_fact:
    provider: "{{ updated_provider.provider }}"
  when: 
    - provider.password is undefined

### Ask for BIG-IP Credentials if not specified in the playbook

- pause:
    prompt: |
            ========================================================================================================
            Provide the BIG-IP username

            ========================================================================================================
  register: bigip_username
  when: 
    - device_username is undefined
    - not only_app_deploy | bool
    - not skip_add_remove_rma_device | bool

- name: Set BIG-IP username
  set_fact:
    device_username: "{{ bigip_username.user_input }}"
  when: 
    - device_username is undefined
    - not only_app_deploy | bool
    - not skip_add_remove_rma_device | bool

- pause:
    prompt: |
            ========================================================================================================
            Provide the BIG-IP password

            ========================================================================================================
    echo: no
  no_log: True
  register: bigip_password
  when: 
    - device_password is undefined
    - not only_app_deploy | bool
    - not skip_add_remove_rma_device | bool

- name: Set BIG-IP password
  set_fact:
    device_password: "{{ bigip_password.user_input }}"
  when: 
    - device_password is undefined
    - not only_app_deploy | bool
    - not skip_add_remove_rma_device | bool

# - debug:
#     var: provider

- name: Verify BIG-IP device_username properly set
  fail:
    msg: "The variable 'device_username' is not defined"
  when: 
    - device_username is undefined
    - not only_app_deploy | bool
    - not skip_add_remove_rma_device | bool

- name: Verify BIG-IP device_password properly set
  fail:
    msg: "The variable 'device_password' is not defined"
  when: 
    - device_password is undefined
    - not only_app_deploy | bool
    - not skip_add_remove_rma_device | bool

- name: Verify dir_as3 properly set
  fail:
    msg: "The variable 'dir_as3' is not defined"
  when: dir_as3 is undefined

- name: Verify BIG-IP bigip1_target properly set
  fail:
    msg: "The variable 'bigip1_target' is not defined"
  when: bigip1_target is undefined

- name: Install Galaxy roles and conditions
  include_tasks: install-galaxy-roles-collections.yml

- name: Authenticate to BIG-IQ
  include_tasks: authentication.yaml

- name: Get BIG-IQ device provisioning type (CM or DCD)
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/cm/system/provisioning"
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: rprov

- name: Fail if you're running the role against a DCD device
  fail:
    msg: "This role should be run against a CM device, but you appear to be running it against a DCD device"
  when: rprov.json.systemPersonality == 'logging_node'

- name: Check if BIG-IQ system is setup
  uri:
    url: "https://{{ provider.server }}:{{ provider.server_port }}/mgmt/shared/system/setup"
    timeout: "{{ timeout }}"
    validate_certs: "{{ provider.validate_certs }}"
    headers:
      X-F5-Auth-Token: "{{ f5_auth_token }}"
  register: setupchk

- name: Stop if the BIG-IQ system is not setup
  fail:
    msg: "The CM device has not been setup. Please onboard the DCD device first."
  when: setupchk.json.isSystemSetup is not defined or not setupchk.json.isSystemSetup|bool

- name: Check both BIG-IP devices are part of the same BIG-IP cluster in BIG-IQ so all referenced objects and AS3 declarations are sync between the 2 devices
  include_tasks: "check-bigip-in-same-cluster.yaml"
  when: not standalone | bool

- name: Check if BIG-IP {{ bigip1_target }} is reachable and we can authenticate to it
  uri:
    url: "https://{{ bigip1_target }}:{{ device_port }}/mgmt/shared/authn/login"
    method: POST
    validate_certs: no
    body:
      username: "{{ device_username }}"
      password: "{{ device_password }}"
      loginProviderName: tmos
    body_format: json
  register: authtoken2
  when:
    - not only_app_deploy | bool
    - not skip_add_remove_rma_device | bool

- name: Check if BIG-IP {{ bigip2_target }} is reachable and we can authenticate to it
  uri:
    url: "https://{{ bigip2_target }}:{{ device_port }}/mgmt/shared/authn/login"
    method: POST
    validate_certs: no
    body:
      username: "{{ device_username }}"
      password: "{{ device_password }}"
      loginProviderName: tmos
    body_format: json
  register: authtoken2
  when: 
    - not standalone | bool
    - not only_app_deploy | bool
    - not skip_add_remove_rma_device | bool

- name: Confirm Proceed
  pause:
    prompt: "\n!!! MAKE SURE YOU DID A FULL CM BACKUP ({{ provider.server }}) BEFORE YOU PROCEED FURTHER !!!
             \n
             \nRole options:\n
             \n  - standalone: {{ standalone }}
             \n  - skip_add_remove_rma_device: {{ skip_add_remove_rma_device }}
             \n  - only_app_deploy: {{ only_app_deploy }}\n
             \nSteps executed by the role:\n
             \n1. Backup AS3 declarations and Legacy App Services from device(s) (will be saved under {{ dir_as3 }})\n
             \n   -- PAUSE --\n
             \n2. Delete the Application Services in BIG-IQ dashboard belonging to the device(s) (apps won't be deleted on the BIG-IP but only on BIG-IQ)\n
             \n   -- PAUSE --\n
             \n3. Remove and Re-add the device(s) from BIG-IQ\n
             \n   -- PAUSE --\n
             \n4. Re-deploy all AS3 and Legacy Application Services to {{ bigip1_target }} ONLY (no service impact)\n
             \nNote: All app services custom roles will be removed in BIG-IQ.
             \nYou will need to manually re-assign those to the users (if any assigned to it) after the role is completed.
             \n\nDo you want to proceed? (yes/no)"
  register: confirm_proceed

- name: Check user input Step 1
  fail:
    msg: "Operation aborted."
  when: not confirm_proceed.user_input | bool

#1. Backup AS3 declarations from devices bigip1_target and bigip2_target
- name: Step 1 - Backup device AS3 declarations (HA use case)
  include_tasks: "backup-apps-cluster.yaml"
  when:
    - not only_app_deploy | bool
    - not standalone | bool

#1. Backup AS3 declarations from device bigip1_target
- name: Step 1 - Backup device AS3 declarations and existing previous (Standalone use case)
  include_tasks: "backup-apps-standalone.yaml"
  when:
    - not only_app_deploy | bool
    - standalone | bool

- name: Confirm Proceed Step 2
  pause:
    prompt: "\nConfirm proceed step 2 (delete the Application Services on BIG-IQ dashboard only, not on BIG-IP)? (yes/no)"
  register: confirm_proceed2
  when:
    - not only_app_deploy | bool
    
- name: Check user input Step 2
  fail:
    msg: "Existing..."
  when:
    - not only_app_deploy
    - not confirm_proceed2.user_input | bool

#2. Delete the AS3 application services on BIG-IQ dashboard (apps won't be deleted on the BIG-IP but only on BIG-IQ)
- name: Step 2 - Force-Delete Application Services bigip1_target (standalone use case)
  block:
  - name: Force-Delete Application Services in bigip1_target
    include_tasks: "force-delete-apps-device.yaml"
    with_items: "{{ configSets_bigip1 }}"
    loop_control:
      loop_var: item1
  rescue:
  # BIQPROJ-26703
  - name: Unpin slCertReferences and sslKeyReferences LTM objects from bigip1_target
    include_tasks: "delete-bigiq-pinned-objects-device.yaml"
    # After un-pin those objects, force-delete should work on remaining AS3 app
  - name: Force-Delete Application Services in bigip1_target
    include_tasks: "force-delete-apps-device-rescue.yaml"
    with_items: "{{ configSets_bigip1 }}"
    loop_control:
      loop_var: item1
  when:
    - not only_app_deploy | bool
    - confirm_proceed2.user_input | bool

#2. Delete the AS3 application services on BIG-IQ dashboard (apps won't be deleted on the BIG-IP but only on BIG-IQ)
- name: Step 2 - Force-Delete Application Services bigip2_target (HA use case)
  block:
  - name: Force-Delete Application Services in bigip2_target
    include_tasks: "force-delete-apps-device.yaml"
    with_items: "{{ configSets_bigip2 }}"
    loop_control:
      loop_var: item1
  rescue:
  # BIQPROJ-26703
  - name: Unpin slCertReferences and sslKeyReferences LTM objects from bigip2_target
    include_tasks: "delete-bigiq-pinned-objects-device.yaml"
    # After un-pin those objects, force-delete should work on remaining AS3 app
  - name: Force-Delete Application Services in bigip2_target
    include_tasks: "force-delete-apps-device-rescue.yaml"
    with_items: "{{ configSets_bigip2 }}"
    loop_control:
      loop_var: item1
  when:
    - not only_app_deploy | bool
    - not standalone | bool
    - confirm_proceed2.user_input | bool

- name: Confirm Proceed Step 3
  pause:
    prompt: "\nConfirm proceed step 3 (remove and add the device(s))? (yes/no)"
  register: confirm_proceed3
  when:
    - not only_app_deploy | bool

- name: Check user input Step 3
  fail:
    msg: "Existing..."
  when:
    - not only_app_deploy | bool
    - not confirm_proceed3.user_input | bool

# 3. Remove and Add the device from BIG-IQ
- name: Step 3 Remove and add the devices bigip1_target and bigip2_target from BIG-IQ (HA use case)
  include_tasks: "bigiq-device-discovery-cluster.yaml"
  when: 
    - not skip_add_remove_rma_device | bool
    - not only_app_deploy | bool
    - not standalone | bool
    - confirm_proceed3.user_input | bool

# 3. Remove and Add the devices from BIG-IQ
- name: Step 3 Remove and add the device bigip1_target from BIG-IQ (Standalone use case)
  include_tasks: "bigiq-device-discovery-standalone.yaml"
  when: 
    - not skip_add_remove_rma_device | bool
    - not only_app_deploy | bool
    - standalone | bool
    - confirm_proceed3.user_input | bool

- name: Confirm Proceed Step 4
  pause:
    prompt: "\nConfirm proceed step 4 (re-deploy the AS3 and Legacy Application Services on {{ bigip1_target }})? (yes/no)"
  register: confirm_proceed4
    
- name: Check user input Step 4
  fail:
    msg: "Existing..."
  when:
    - not confirm_proceed4.user_input | bool

# 4. Re-deploy the AS3 application services on bigip1_target (no service impact)
- name: ATC POST - deploy to {{ bigip1_target }} - HA and Standalone use cases # Post AS3 declaration to new device using atc_deploy
  include_role:
    name: f5devcentral.atc_deploy
  vars:
    atc_service: AS3
    atc_method: POST
    atc_declaration_file: "{{ dir_as3 }}/{{ bigip1_target }}_bigip_as3_apps.json"
    atc_delay: 30
    atc_retries: 30
  register: atc_AS3_status
  when: 
    - confirm_proceed4.user_input | bool
  ignore_errors: yes # what if there are no AS3 apps but only legacy?

# In case only_app_deploy: true, load existing app backup/json configSets file(s)
- name: Load configSets_bigip1 file
  set_fact:
    configSets_bigip1: "{{ lookup('file', path_configSets_bigip1_file) }}"
  vars:
    path_configSets_bigip1_file: "{{ dir_as3 }}/{{ bigip1_target }}_bigiq_configSets.json"
  when:
    - only_app_deploy | bool
  ignore_errors: yes # what if there are nothing in config set bigip1 but only bigip2?

- name: Load configSets_bigip2 file
  set_fact:
    configSets_bigip2: "{{ lookup('file', path_configSets_bigip2_file) }}"
  vars:
    path_configSets_bigip2_file: "{{ dir_as3 }}/{{ bigip2_target }}_bigiq_configSets.json"
  when:
    - only_app_deploy | bool
    - not standalone | bool
  ignore_errors: yes # what if there are nothing in config set bigip2 but only bigip1?

# In case only_app_deploy: true, load existing app backup/json classicConfigs file (bigip1)
- name: Load classicConfigs_bigip1 file
  set_fact:
    classicConfigs_bigip1: "{{ lookup('file', path_classicConfigs_bigip1_file) }}"
  vars:
    path_classicConfigs_bigip1_file: "{{ dir_as3 }}/{{ bigip1_target }}_bigip_legacy_apps.json"
  when:
    - only_app_deploy | bool
  ignore_errors: yes # what if there are no legacy config?

- name: Service Catalog and Legacy App service use cases - from bigip1_target
  include_tasks: "service-catalog-and-legacy-apps.yaml"
  with_items: "{{ configSets_bigip1 }}"
  loop_control:
    loop_var: item2

- name: Service Catalog and Legacy App service use cases - from bigip2_target
  include_tasks: "service-catalog-and-legacy-apps.yaml"
  with_items: "{{ configSets_bigip2 }}"
  loop_control:
    loop_var: item2
  when: 
    - not standalone | bool

- name: Move AS3 application service(s) in BIG-IQ application dashboard - from bigip1_target
  include_tasks: "move-app-services.yaml"
  with_items: "{{ configSets_bigip1 }}"
  loop_control:
    loop_var: item3
  when: 
    - confirm_proceed4.user_input | bool

- name: Move AS3 application service(s) in BIG-IQ application dashboard - from bigip2_target
  include_tasks: "move-app-services.yaml"
  with_items: "{{ configSets_bigip2 }}"
  loop_control:
    loop_var: item3
  when: 
    - not standalone | bool
    - confirm_proceed4.user_input | bool

## Show any service catalog template removed which needs to be re-created manually
- name: App services deployed with Service Catalog templates removed which needs to be re-created manually on the BIG-IQ as Legacy App Services
  debug:
    msg:
      - "{{ sc_apps|default([]) }}"
      - "Visit following link to learn how to convert Service Catalog Apps to Legacy Apps"
      - "https://clouddocs.f5.com/training/community/big-iq-cloud-edition/html/class1/module6/lab4.html"
  when: 
    - sc_apps is defined
    - sc_apps | length > 0
    - confirm_proceed4.user_input | bool